# -*- coding: utf-8 -*-
"""greet_utils.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xa6GNSbWczA7E60I84P0Kr10imsvkX8v
"""

import streamlit as st
from datetime import datetime
import pandas as pd
import requests
import base64
import uuid
from gtts import gTTS

# Weather API Key
WEATHER_API_KEY = "your_openweather_api_key"  # Replace with your actual key
DATA_PATH = "data/Data_Model.csv"

def get_weather_condition(city):
    try:
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}"
        response = requests.get(url)
        data = response.json()
        return data['weather'][0]['main']
    except:
        return "Clear"  # Fallback weather

def get_greeting(name, dob):
    now = datetime.now()
    hour = now.hour

    # Decide time of day greeting
    if 5 <= hour < 12:
        greeting_time = "Good Morning"
    elif 12 <= hour < 18:
        greeting_time = "Good Afternoon"
    else:
        greeting_time = "Good Evening"

    # Check for birthday
    today_str = now.strftime("%m-%d")
    dob_obj = datetime.strptime(dob, "%Y-%m-%d")
    is_birthday = dob_obj.strftime("%m-%d") == today_str

    # Load city from dataset
    df = pd.read_csv("data/Data_Model.csv")
    customer_row = df[df['first_name'].str.lower() == name.lower()]
    if not customer_row.empty:
        city = customer_row.iloc[0]['city']
    else:
        city = "your city"

    weather = get_weather_condition(city)

    # Compose greeting
    greeting = f"{greeting_time} {name} The weather is {weather} today! Try our specials!"
    if is_birthday:
        greeting += " Happy Birthday!!! We’ve got a sweet surprise just for you – enjoy exclusive birthday specials on cakes, chocolates, and more delightful treats today.!. It’s our way of saying thanks for celebrating with us – let’s make your day extra special!!"

    # Text-to-speech synthesis
    tts = gTTS(text=greeting, lang='en')
    audio_file = f"greeting_{uuid.uuid4().hex}.mp3"
    tts.save(audio_file)

    return greeting, audio_file
